# used by AWS CoOdePipeline to build and assemble artifacts
# Docker example pulled from here
# https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-cd-pipeline.html
#

version: 0.2

env:
  variables:
    JAVA_HOME: "/usr/lib/jvm/java-8-openjdk-amd64"

# when configuring build in aws, there is option to choose environment
# ubunutu seems more flexible? or at least better examples exist
# fr example, aws doesn't support apt-get

phases:
  install:
    runtime-versions:
      java: openjdk8
    commands:
#      - echo Entered the install phase...
      - apt-get update -y
      - apt-get install -y maven
  build:
    commands:
      - echo Entered the build phase...
      - echo Build started on `date`
      - mvn install
#      And now package Lambda
#      https://advancedweb.hu/2018/12/18/lambda_cf_template/
#      - or
#      https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-deploying.html
  post_build:
    commands:
      - echo Entered the post_build phase...
      - echo Build completed on `date`
artifacts:
  files:
    - 'batch/target/*.jar'
    - 'docker/**/*'
    - 'application.yml'
    - 'application-params-*.json'
  discard-paths: no
#cache:
#  paths:
#    - '/root/.m2/**/*'