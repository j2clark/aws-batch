# used by AWS CoOdePipeline to build and assemble artifacts
# Docker example pulled from here
# https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-cd-pipeline.html
#
# https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-env-vars.html
#

version: 0.2

env:
  variables:
    JAVA_HOME: "/usr/lib/jvm/java-8-openjdk-amd64"
#  parameter-store:
#    LOGIN_PASSWORD: /CodeBuild/dockerLoginPassword

# when configuring build in aws, there is option to choose environment
# ubunutu seems more flexible? or at least better examples exist
# for example, aws doesn't support apt-get

phases:
  install:
    runtime-versions:
      java: openjdk8
    commands:
      - echo Entered the install phase...
#      - apt-get update -y
#      - apt-get install -y maven
#    finally:
#      - echo This always runs even if the update or install command fails
  pre_build:
    # policy had to be added to codebuild role to allow ECR access
    # see bottom of  https://docs.aws.amazon.com/AmazonECR/latest/userguide/RepositoryPolicyExamples.html
    commands:
      - echo Entered the pre_build phase...
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
#      - REPOSITORY_URI=089600871681.dkr.ecr.us-west-1.amazonaws.com/batch-test
#      - echo 'ACCOUNT-ID: ${AccountID}'
      - REPOSITORY_URI='${AccountID}.dkr.ecr.${AWSRegion}.amazonaws.com/${Environment}-${AppName}-${AppVersion}'
      - echo $CODEBUILD_BUILD_ID
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F"-" '{print $7}')
#      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
#      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')

    finally:
      - echo This always runs even if the login command fails
  build:
    commands:
      - echo Entered the build phase...
      - echo Build started on `date`
      # docker build requires elevated permissions
      - docker build -f docker/build/Dockerfile -t $REPOSITORY_URI:$IMAGE_TAG .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:latest
    finally:
      - echo This always runs even if the install command fails
  post_build:
    commands:
      - echo Entered the post_build phase...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo pushed docker image $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo pushed docker image $REPOSITORY_URI:latest
      - echo Build completed on `date`
#cache:
#  paths:
#    - '/root/.m2/**/*'
