Description: >
  Batch Application Environment Configuration

Parameters:
  Environment:
    Type: String
    AllowedValues:
      - 'test'
  AppName:
    Type: String
    Default: 'batch-api'
  AppVersion:
    Type: String
    Default: 'v0'
  DockerName:
    Type: String
#    Default: 'aws-batch-test'

#Metadata:

Resources:

  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub '${Environment}-${AppName}-{AppVersion}-${DockerName}'

  BatchJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      JobDefinitionName: !Sub '${Environment}-${AppName}-{AppVersion}-job'
      ContainerProperties:
#        Image: 089600871681.dkr.ecr.us-west-1.amazonaws.com/batch-test:latest
        Image: !Ref ECRRepository
        Vcpus: 1
        Memory: 2000
        Command: ["echo", "Hello World"]
      RetryStrategy:
        Attempts: 1

  BatchJobCompute:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ComputeEnvironmentName: !Sub '${Environment}-${AppName}-{AppVersion}-compute'
      Type: MANAGED
      ServiceRole: !Ref ServiceRole
#      ServiceRole: arn:aws:iam::089600871681:role/service-role/AWSBatchServiceRole
      ComputeResources:
        Type: EC2
        MinvCpus: 0
        MaxvCpus: 64
        DesiredvCpus: 0
        InstanceTypes:
          - optimal
        Subnets:
          - subnet-d2971c8a
          - subnet-ad176fc9
        SecurityGroupIds:
          - sg-15583372
        InstanceRole: !Ref InstanceRole
#        InstanceRole: arn:aws:iam::089600871681:instance-profile/ecsInstanceRole


  BatchJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      Priority: 1
      JobQueueName: !Sub '${Environment}-${AppName}-{AppVersion}-queue'
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref BatchJobCompute

  ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${Environment}-${AppName}-{AppVersion}-BatchServiceRole'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: 'batch.amazonaws.com'
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole'

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${Environment}-${AppName}-{AppVersion}-EC2InstanceRole'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: 'ec2.amazonaws.com'
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role'

Outputs:

  ECRRepository:
    Description: Docker Image Repository
    Value: !Ref ECRRepository
    Export:
      Name: !Sub "${Environment}-${AppName}-{AppVersion}-ECRRepository"

  BatchQueue:
    Description: Batch Job Queue
    Value: !Ref BatchQueue
    Export:
      Name: !Sub "${Environment}-${AppName}-{AppVersion}-queue"

  BatchJobDefinition:
    Description: Batch Job Definition
    Value: !Ref BatchQueue
    Export:
      Name: !Sub "${Environment}-${AppName}-{AppVersion}-job"

