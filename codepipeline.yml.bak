Description: >
  Docker Batch Configuration

Parameters:
  Environment:
    Type: String
    AllowedValues:
      - 'test'
  BranchName:
    Description: GitHub branch name
    Type: String
    Default: master
  RepositoryName:
    Description: GitHub repository name
    Type: String
    Default: aws-batch
  GitHubOwner:
    Type: String
    Default: j2clark
  GitHubSecret:
    Type: String
    NoEcho: true
  GitHubOAuthToken:
    Type: String
    NoEcho: true

Resources:

#  CodePipelineArtifactStoreBucket:
#    Type: 'AWS::S3::Bucket'
#    Properties:
#      VersioningConfiguration:
#        Status: Enabled
#      AccessControl: BucketOwnerFullControl

  AWSBatchPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: aws-batch-codepipeline
      RoleArn: !GetAtt [CodePipelineRole, Arn]
      ArtifactStore:
        Type: S3
#        Location: !Ref CodePipelineArtifactStoreBucket
        Location: 'codepipeline-us-west-1-348209300020'
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref RepositoryName
                Branch: !Ref BranchName
                OAuthToken: !Ref GitHubOAuthToken
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: AwsBatchBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: AwsBatchBuild
              Configuration:
                ProjectName: !Ref AwsBatchCodeBuild
              RunOrder: 1

  AwsBatchCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
#      ServiceRole: !Ref CodeBuildRole
      ServiceRole: 'arn:aws:iam::089600871681:role/service-role/codebuild-aws-batch-service-role'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        # https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
#        EnvironmentVariables:
#          - Name: varName1
#            Value: varValue1
#          - Name: varName2
#            Value: varValue2
#            Type: PLAINTEXT
#          - Name: varName3
#            Value: /CodeBuild/testParameter
#            Type: PARAMETER_STORE
      Source:
        Type: CODEPIPELINE
#        BuildSpec: 'build/buildspec.yml'
      TimeoutInMinutes: 5
#      VpcConfig:
#        VpcId: !Ref CodeBuildVPC
#        Subnets: [!Ref CodeBuildSubnet]
#        SecurityGroupIds: [!Ref CodeBuildSecurityGroup]


  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

#  CodePipelineServiceRole:
#    Type: 'AWS::IAM::Role'
#    Properties:
#      AssumeRolePolicyDocument:
#        Version: 2012-10-17
#        Statement:
#          - Effect: Allow
#            Principal:
#              Service:
#                - codepipeline.amazonaws.com
#            Action: 'sts:AssumeRole'
#      Path: /
#      Policies:
#        - PolicyName: AWS-CodePipeline-Service-3
#          PolicyDocument:
#            Version: 2012-10-17
#            Statement:
#              - Effect: Allow
#                Action:
#                  - 'codecommit:CancelUploadArchive'
#                  - 'codecommit:GetBranch'
#                  - 'codecommit:GetCommit'
#                  - 'codecommit:GetUploadArchiveStatus'
#                  - 'codecommit:UploadArchive'
#                Resource: '*'
#              - Effect: Allow
#                Action:
#                  - 'codedeploy:CreateDeployment'
#                  - 'codedeploy:GetApplicationRevision'
#                  - 'codedeploy:GetDeployment'
#                  - 'codedeploy:GetDeploymentConfig'
#                  - 'codedeploy:RegisterApplicationRevision'
#                Resource: '*'
#              - Effect: Allow
#                Action:
#                  - 'codebuild:BatchGetBuilds'
#                  - 'codebuild:StartBuild'
#                Resource: '*'
#              - Effect: Allow
#                Action:
#                  - 'devicefarm:ListProjects'
#                  - 'devicefarm:ListDevicePools'
#                  - 'devicefarm:GetRun'
#                  - 'devicefarm:GetUpload'
#                  - 'devicefarm:CreateUpload'
#                  - 'devicefarm:ScheduleRun'
#                Resource: '*'
#              - Effect: Allow
#                Action:
#                  - 'lambda:InvokeFunction'
#                  - 'lambda:ListFunctions'
#                Resource: '*'
#              - Effect: Allow
#                Action:
#                  - 'iam:PassRole'
#                Resource: '*'
#              - Effect: Allow
#                Action:
#                  - 'elasticbeanstalk:*'
#                  - 'ec2:*'
#                  - 'elasticloadbalancing:*'
#                  - 'autoscaling:*'
#                  - 'cloudwatch:*'
#                  - 's3:*'
#                  - 'sns:*'
#                  - 'cloudformation:*'
#                  - 'rds:*'
#                  - 'sqs:*'
#                  - 'ecs:*'
#                Resource: '*'

#  CodeBuildRole:
#    Type: AWS::IAM::Role
#    Properties:
#      AssumeRolePolicyDocument:
#        Statement:
#          - Action: ['sts:AssumeRole']
#            Effect: Allow
#            Principal:
#              Service: [codebuild.amazonaws.com]
#        Version: '2012-10-17'
#      Path: /
#      Policies:
#        - PolicyName: CodeBuildAccess
#          PolicyDocument:
#            Version: '2012-10-17'
#            Statement:
#              - Action:
#                  - 'logs:*'
#                  - 'ec2:CreateNetworkInterface'
#                  - 'ec2:DescribeNetworkInterfaces'
#                  - 'ec2:DeleteNetworkInterface'
#                  - 'ec2:DescribeSubnets'
#                  - 'ec2:DescribeSecurityGroups'
#                  - 'ec2:DescribeDhcpOptions'
#                  - 'ec2:DescribeVpcs'
#                  - 'ec2:CreateNetworkInterfacePermission'
#                Effect: Allow
#                Resource: '*'
  CodeBuildVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: name
          Value: codebuild
  CodeBuildSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: CodeBuildVPC
      CidrBlock: 10.0.1.0/24
  CodeBuildSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Codebuild Internet Group
      GroupDescription: 'CodeBuild SecurityGroup'
      VpcId: !Ref CodeBuildVPC